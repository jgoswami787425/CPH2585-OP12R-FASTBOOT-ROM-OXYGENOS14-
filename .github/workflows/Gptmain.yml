name: OnePlus 12R Kernel Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-22.04
    env:
      ARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-
      DEFCONFIG: op12r_defconfig   # <- Kernel defconfig, fix karo agar alag ho

    steps:
      # 1️⃣ Checkout your ROM repo (optional, if needed)
      - name: Checkout ROM repository
        uses: actions/checkout@v4

      # 2️⃣ Checkout Kernel source
      - name: Checkout OnePlus 12R Kernel
        run: |
          git clone --depth=1 https://github.com/OnePlus12R-development/android_kernel_oneplus_sm8550.git kernel

      # 3️⃣ Install dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison flex git make clang lld \
            libssl-dev build-essential gcc-aarch64-linux-gnu wget

      # 4️⃣ Create output folder
      - name: Setup output directory
        run: mkdir -p kernel/out

      # 5️⃣ Load kernel config
      - name: Load defconfig
        run: make O=out ARCH=${ARCH} ${DEFCONFIG} -C kernel

      # 6️⃣ Build kernel
      - name: Build kernel
        run: make O=out ARCH=${ARCH} -C kernel -j$(nproc) CROSS_COMPILE=${CROSS_COMPILE}

      # 7️⃣ Check output files
      - name: Check output
        run: ls -lh kernel/out/arch/arm64/boot/

      # 8️⃣ Collect artifacts
      - name: Collect kernel artifacts
        run: |
          mkdir -p build_output
          cp kernel/out/arch/arm64/boot/Image* build_output/ || true
          cp kernel/out/arch/arm64/boot/dtbo.img build_output/ || true
          cp kernel/out/arch/arm64/boot/vendor_boot.img build_output/ || true
          ls -lh build_output/

      # 9️⃣ Upload artifacts
      - name: Upload kernel artifact
        uses: actions/upload-artifact@v4
        with:
          name: OnePlus12R-Kernel
          path: build_output/
