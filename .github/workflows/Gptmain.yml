name: OnePlus 12R Kernel Build

# Trigger build on push or manually
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-kernel:
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-

    steps:
      # 1. Checkout kernel source
      - name: Checkout kernel source
        uses: actions/checkout@v3

      # 2. Install required dependencies
      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git bc bison flex libssl-dev build-essential gcc-aarch64-linux-gnu wget

      # 3. Set up output directory
      - name: Setup output directory
        run: mkdir -p out

      # 4. Load default kernel config (defconfig from your ROM)
      - name: Load kernel config
        run: make O=out ARCH=${ARCH} <defconfig_name>_defconfig

      # 5. Optional: Interactive config (commented out)
      # - name: Customize kernel
      #   run: make O=out ARCH=${ARCH} menuconfig

      # 6. Build kernel
      - name: Build kernel
        run: make O=out -j$(nproc) ARCH=${ARCH} CROSS_COMPILE=${CROSS_COMPILE}

      # 7. Collect the kernel image
      - name: Collect kernel artifact
        run: |
          mkdir -p build_output
          cp out/arch/arm64/boot/Image.gz-dtb build_output/
          ls -lh build_output/

      # 8. Upload the kernel build as artifact
      - name: Upload kernel artifact
        uses: actions/upload-artifact@v3
        with:
          name: OnePlus12R-Kernel
          path: build_output/
